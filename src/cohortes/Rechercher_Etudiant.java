/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cohortes;


import static cohortes.Connexion.cnx;
import static cohortes.Connexion.rst;
import static cohortes.Rechercher.cnx;
import static cohortes.Rechercher.rst;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import static javafx.scene.paint.Color.color;
import static javafx.scene.paint.Color.color;
import static javafx.scene.paint.Color.color;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import oracle.net.aso.j;



/**
 *
 * @author Chachou
 */
public class Rechercher_Etudiant extends javax.swing.JFrame {

    private final DefaultTableModel modelNotesS1;
    /**
     * Creates new form Connexion
     */
    
    //Connexion à la BDD
    private static Connection  connecterDB(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/PTUT?zeroDateTimeBehavior=convertToNull";
            String user="root";
            String password="";
            Connection cnx=DriverManager.getConnection(url,user,password);
            return cnx;
        }catch(Exception e){
            e.printStackTrace();
            return null;
        }
     }
    
    public Rechercher_Etudiant(String NomPrenom) {
        
        modelNotesS1=new DefaultTableModel();
        initComponents();
        
        //Initilisation des champs en fonction des l'étudiant
         try
         {
             
              cnx=connecterDB(); 
              st=cnx.createStatement();
 
              rst=st.executeQuery("Select * from etudiants where Nom1 ='"+NomPrenom+"'");
               while(rst.next())
               {
                    lbl_nom1.setText(rst.getString("nom"));
                    lbl_prenom1.setText(rst.getString("prenom"));
                    lbl_bac1.setText(rst.getString("Bac"));
                    lbl_absence1.setText(rst.getString("Abscence"));
                    lbl_email1.setText(rst.getString("email"));
                    lbl_groupe1.setText(rst.getString("Groupe"));
                    lbl_nE1.setText(rst.getString("NE"));
                    tf_comm.setText(rst.getString("Commentaire"));
               }
              
                  
              }
          catch(Exception ex){
              ex.printStackTrace();
          } 
    }

    private Rechercher_Etudiant() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pann_cohortes = new javax.swing.JPanel();
        lbl_titre = new javax.swing.JLabel();
        ImageIcon image=new ImageIcon("src/gif/Logo.jpg");
        lbl_logo = new javax.swing.JLabel(image);
        pann_menu = new javax.swing.JPanel();
        bt_rechercher = new javax.swing.JButton();
        bt_afficher = new javax.swing.JButton();
        bt_lister = new javax.swing.JButton();
        lbl_erreur = new javax.swing.JLabel();
        pann_notes = new javax.swing.JPanel();
        notesS1 = new javax.swing.JButton();
        notesS2 = new javax.swing.JButton();
        notesS3 = new javax.swing.JButton();
        notesS4 = new javax.swing.JButton();
        jsp_notes = new javax.swing.JScrollPane();
        jt_notes = new javax.swing.JTable();
        tf_comm = new javax.swing.JTextField();
        lbl_resultat = new javax.swing.JLabel();
        lbl_semestre = new javax.swing.JLabel();
        lbl_nom = new javax.swing.JLabel();
        lbl_prenom = new javax.swing.JLabel();
        lbl_bac = new javax.swing.JLabel();
        lbl_email = new javax.swing.JLabel();
        lbl_absence = new javax.swing.JLabel();
        lbl_groupe = new javax.swing.JLabel();
        lbl_nom1 = new javax.swing.JLabel();
        lbl_prenom1 = new javax.swing.JLabel();
        lbl_groupe1 = new javax.swing.JLabel();
        lbl_absence1 = new javax.swing.JLabel();
        lbl_email1 = new javax.swing.JLabel();
        lbl_bac1 = new javax.swing.JLabel();
        lbl_nE = new javax.swing.JLabel();
        lbl_nE1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        pann_cohortes.setBackground(new java.awt.Color(0, 0, 0));
        pann_cohortes.setForeground(new java.awt.Color(0, 0, 0));

        lbl_titre.setBackground(new java.awt.Color(102, 255, 51));
        lbl_titre.setFont(new java.awt.Font("Elephant", 1, 48)); // NOI18N
        lbl_titre.setForeground(new java.awt.Color(102, 255, 204));
        lbl_titre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_titre.setText("COHORTES");

        lbl_logo.setText("");

        javax.swing.GroupLayout pann_cohortesLayout = new javax.swing.GroupLayout(pann_cohortes);
        pann_cohortes.setLayout(pann_cohortesLayout);
        pann_cohortesLayout.setHorizontalGroup(
            pann_cohortesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pann_cohortesLayout.createSequentialGroup()
                .addComponent(lbl_logo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_titre, javax.swing.GroupLayout.PREFERRED_SIZE, 1050, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pann_cohortesLayout.setVerticalGroup(
            pann_cohortesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lbl_titre, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
        );

        pann_menu.setBackground(new java.awt.Color(153, 153, 153));

        bt_rechercher.setBackground(new java.awt.Color(102, 255, 204));
        bt_rechercher.setFont(new java.awt.Font("Leelawadee UI", 1, 24)); // NOI18N
        bt_rechercher.setForeground(new java.awt.Color(0, 0, 0));
        bt_rechercher.setText("Rechercher");
        bt_rechercher.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bt_rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_rechercherActionPerformed(evt);
            }
        });
        bt_rechercher.addMouseListener( new btMouseListener());

        bt_afficher.setBackground(new java.awt.Color(102, 255, 204));
        bt_afficher.setFont(new java.awt.Font("Leelawadee", 1, 24)); // NOI18N
        bt_afficher.setForeground(new java.awt.Color(0, 0, 0));
        bt_afficher.setText("Afficher");
        bt_afficher.addMouseListener( new btMouseListener());

        bt_lister.setBackground(new java.awt.Color(102, 255, 204));
        bt_lister.setFont(new java.awt.Font("Leelawadee", 1, 24)); // NOI18N
        bt_lister.setForeground(new java.awt.Color(0, 0, 0));
        bt_lister.setText("Lister");
        bt_lister.addMouseListener( new btMouseListener());

        javax.swing.GroupLayout pann_menuLayout = new javax.swing.GroupLayout(pann_menu);
        pann_menu.setLayout(pann_menuLayout);
        pann_menuLayout.setHorizontalGroup(
            pann_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pann_menuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pann_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bt_afficher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_rechercher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_lister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pann_menuLayout.setVerticalGroup(
            pann_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pann_menuLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(bt_rechercher)
                .addGap(48, 48, 48)
                .addComponent(bt_afficher, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(bt_lister, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(220, Short.MAX_VALUE))
        );

        lbl_erreur.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lbl_erreur.setForeground(new java.awt.Color(255, 0, 51));
        lbl_erreur.setVisible(false);

        pann_notes.setBackground(new java.awt.Color(204, 204, 204));
        pann_notes.setForeground(new java.awt.Color(0, 0, 0));

        notesS1.setBackground(new java.awt.Color(0, 0, 0));
        notesS1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        notesS1.setForeground(new java.awt.Color(0, 204, 204));
        notesS1.setText("Notes S1");
        notesS1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notesS1ActionPerformed(evt);
            }
        });

        notesS2.setBackground(new java.awt.Color(0, 0, 0));
        notesS2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        notesS2.setForeground(new java.awt.Color(0, 204, 204));
        notesS2.setText("Notes S2");
        notesS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notesS2ActionPerformed(evt);
            }
        });

        notesS3.setBackground(new java.awt.Color(0, 0, 0));
        notesS3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        notesS3.setForeground(new java.awt.Color(0, 204, 204));
        notesS3.setText("Notes S3");
        notesS3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notesS3ActionPerformed(evt);
            }
        });

        notesS4.setBackground(new java.awt.Color(0, 0, 0));
        notesS4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        notesS4.setForeground(new java.awt.Color(0, 204, 204));
        notesS4.setText("Notes S4");
        notesS4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notesS4ActionPerformed(evt);
            }
        });

        jt_notes.setBackground(new java.awt.Color(204, 204, 204));
        jt_notes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jt_notes.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jt_notes.setForeground(new java.awt.Color(0, 0, 0));
        jt_notes.setRowHeight(30);
        jt_notes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matieres", "Notes"
            }
        ));
        jsp_notes.setViewportView(jt_notes);

        tf_comm.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tf_comm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_commActionPerformed(evt);
            }
        });
        tf_comm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_commActionPerformed(evt);
            }
        });
        tf_comm.addKeyListener(new KeyListener() {

            public void keyTyped(KeyEvent e) {

            }

            public void keyPressed(KeyEvent e) {

                if (e.getKeyCode() == KeyEvent.VK_ENTER)

                {
                    try
                    {
                        cnx=connecterDB();
                        st=cnx.createStatement();
                        String ne=lbl_nE1.getText();
                        String commentaire=tf_comm.getText();

                        st.executeUpdate("update etudiants set Commentaire='"+commentaire+"' WHERE  NE like'"+ne+"'");

                    }
                    catch(Exception ex){
                        ex.printStackTrace();
                    }
                }

            }

            public void keyReleased(KeyEvent e) {

            }

        });

        lbl_resultat.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lbl_resultat.setForeground(new java.awt.Color(0, 0, 0));
        lbl_resultat.setText("Resultat :");

        lbl_semestre.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lbl_semestre.setText("");

        javax.swing.GroupLayout pann_notesLayout = new javax.swing.GroupLayout(pann_notes);
        pann_notes.setLayout(pann_notesLayout);
        pann_notesLayout.setHorizontalGroup(
            pann_notesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pann_notesLayout.createSequentialGroup()
                .addComponent(notesS1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(notesS2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(notesS3, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(notesS4, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pann_notesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jsp_notes, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pann_notesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pann_notesLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lbl_resultat, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pann_notesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(tf_comm, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))))
            .addGroup(pann_notesLayout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(lbl_semestre, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pann_notesLayout.setVerticalGroup(
            pann_notesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pann_notesLayout.createSequentialGroup()
                .addGroup(pann_notesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(notesS1)
                    .addComponent(notesS2)
                    .addComponent(notesS3)
                    .addComponent(notesS4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_semestre, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pann_notesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pann_notesLayout.createSequentialGroup()
                        .addComponent(tf_comm, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(lbl_resultat)
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addComponent(jsp_notes))
                .addContainerGap())
        );

        lbl_nom.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
        lbl_nom.setText("Nom : ");

        lbl_prenom.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
        lbl_prenom.setText("Prénom : ");

        lbl_bac.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbl_bac.setText("BAC:");

        lbl_email.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbl_email.setText("Email:");

        lbl_absence.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbl_absence.setText("Absence(s) :");

        lbl_groupe.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbl_groupe.setText("Groupe :");

        lbl_nom1.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N

        lbl_prenom1.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N

        lbl_groupe1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        lbl_absence1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        lbl_email1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        lbl_bac1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        lbl_nE.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
        lbl_nE.setText("Numéro Etudiant :");

        lbl_nE1.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pann_cohortes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(pann_menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lbl_groupe)
                                            .addComponent(lbl_email, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lbl_groupe1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(32, 32, 32)
                                                .addComponent(lbl_absence)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lbl_absence1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(lbl_email1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(pann_notes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_nom1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_prenom)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbl_prenom1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(lbl_nE, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbl_nE1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_bac, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbl_bac1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(65, Short.MAX_VALUE))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(lbl_erreur, javax.swing.GroupLayout.PREFERRED_SIZE, 1225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pann_cohortes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(pann_menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_nom1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbl_nE)
                                    .addComponent(lbl_nE1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_prenom1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_prenom, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbl_nom))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_groupe1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_absence)
                                .addComponent(lbl_groupe)
                                .addComponent(lbl_bac))
                            .addComponent(lbl_absence1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_bac1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_email)
                            .addComponent(lbl_email1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pann_notes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(lbl_erreur, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1465, 867));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bt_rechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_rechercherActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_bt_rechercherActionPerformed

    //Test afin de vider la table de note si elle n'est pas vide
    private void test_table()
    {
        
        DefaultTableModel modele= (DefaultTableModel)jt_notes.getModel();
        int l=modele.getRowCount();
        if(l>0)
        {
              for(int i =l; i > 0; --i) 
            {
                modele.removeRow(i-1);
            }
        }
        System.out.println(l);
    }
    
    // Mise en place des notes du semestre 1
    private void notesS1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notesS1ActionPerformed
        // TODO add your handling code here:
        lbl_semestre.setText("Semestre 1");
        test_table();
        DefaultTableModel modele= (DefaultTableModel)jt_notes.getModel();
        jt_notes.setDefaultRenderer(Object.class, new DefaultTableCellRenderer()
{
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
    {
    
        final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
    if(row==17||row==25)
    {
        c.setBackground(new Color(102,255,204));
        c.setFont(new Font("Helvetica Bold", Font.BOLD,20));
        
 
    }
    else
        if(row==26)
            {
                c.setBackground(new Color(10, 216, 148));
                c.setFont(new Font("Helvetica Bold", Font.BOLD,22));
            }
        else
            if(row==27||row==28)
            {
                c.setBackground(new Color(136, 150, 149));
                c.setFont(new Font("Helvetica Bold", Font.BOLD,20));
            }
            else
            {
                c.setBackground(Color.WHITE);
            }
        

return c;
    }});

         try
        {
            String note="", nomColonne="";
            int i;
            cnx=connecterDB();
            st=cnx.createStatement();
            String ne= lbl_nE1.getText();
            rst=st.executeQuery("Select * from notess1 where NE like'"+ne+"'");
           
                while(rst.next())
                {
                    for(i=3;i<32;i++)
                    {
                    
                    nomColonne=rst.getMetaData().getColumnName(i);
                    note=rst.getString(nomColonne);
                    if(i<29)
                    {
                    modele.addRow(new Object[]{recherche_nom_matiere(nomColonne),note});
                    }
                    if(i==29)
                    {  modele.addRow(new Object[]{"Moyenne S1",note});}
                    if(i==30)
                    {modele.addRow(new Object[]{"Ptn",note});}
                    if(i==31)
                    { modele.addRow(new Object[]{"Rang",note});}
                    
                 }
            
                }
    
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
     
    }//GEN-LAST:event_notesS1ActionPerformed
    // Mise en place des notes du semestre 2 
    private void notesS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notesS2ActionPerformed
        // TODO add your handling code here:
                lbl_semestre.setText("Semestre 2");

         test_table();
        DefaultTableModel modele= (DefaultTableModel)jt_notes.getModel();
           jt_notes.setDefaultRenderer(Object.class, new DefaultTableCellRenderer()
{
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
    {
    
       
        final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
    if(row==13||row==23)
    {
        c.setBackground(new Color(102,255,204));
        c.setFont(new Font("Helvetica Bold", Font.BOLD,20));
    }
    else
        if(row==24)
            {
                c.setBackground(new Color(10, 216, 148));
                c.setFont(new Font("Helvetica Bold", Font.BOLD,22));
            }
        else
            if(row==25||row==26)
            {
                c.setBackground(new Color(136, 150, 149));
                c.setFont(new Font("Helvetica Bold", Font.BOLD,20));
            }
            else
            {
                c.setBackground(Color.WHITE);
            }
        

return c;
    }});
        try
        {
            String note="", nomColonne="";
            int i;
            cnx=connecterDB();
            st=cnx.createStatement();
            String ne= lbl_nE1.getText();
            rst=st.executeQuery("Select * from notess2 where NE like'"+ne+"'");
           
                while(rst.next())
                {
                    for(i=3;i<30;i++)
                    {
                    
                    nomColonne=rst.getMetaData().getColumnName(i);
                    note=rst.getString(nomColonne);
                    if(i<27)
                    {
                    modele.addRow(new Object[]{recherche_nom_matiere(nomColonne),note});
                    }
                    if(i==27)
                    {  modele.addRow(new Object[]{"Moyenne S2",note});}
                    if(i==28)
                    {modele.addRow(new Object[]{"Ptn",note});}
                    if(i==29)
                    { modele.addRow(new Object[]{"Rang",note});}
                    }   

                }
    
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
     
    
    }//GEN-LAST:event_notesS2ActionPerformed
     // Mise en place des notes du semestre 3
    private void notesS3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notesS3ActionPerformed
        {                                        
        // TODO add your handling code here:
                lbl_semestre.setText("Semestre 3");

         test_table();
        DefaultTableModel modele= (DefaultTableModel)jt_notes.getModel();
           jt_notes.setDefaultRenderer(Object.class, new DefaultTableCellRenderer()
{
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
    {
    
       
        final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
    if(row==10||row==19)
    {
        c.setBackground(new Color(102,255,204));
        c.setFont(new Font("Helvetica Bold", Font.BOLD,20));
    }
    else
        if(row==20)
            {
                c.setBackground(new Color(10, 216, 148));
                c.setFont(new Font("Helvetica Bold", Font.BOLD,22));
            }
        else
            if(row==21||row==22)
            {
                c.setBackground(new Color(136, 150, 149));
                c.setFont(new Font("Helvetica Bold", Font.BOLD,20));
            }
            else
            {
                c.setBackground(Color.WHITE);
            }
        

return c;
    }});
        try
        {
            String note="", nomColonne="";
            int i;
            cnx=connecterDB();
            st=cnx.createStatement();
            String ne= lbl_nE1.getText();
            rst=st.executeQuery("Select * from notess3 where NE like'"+ne+"'");
           
                while(rst.next())
                {
                    for(i=3;i<26;i++)
                    {
                    
                    nomColonne=rst.getMetaData().getColumnName(i);
                    note=rst.getString(nomColonne);
                    if(i<23)
                    {
                    modele.addRow(new Object[]{recherche_nom_matiere(nomColonne),note});
                    }
                    if(i==23)
                    {  modele.addRow(new Object[]{"Moyenne S3",note});}
                    if(i==24)
                    {modele.addRow(new Object[]{"Ptn",note});}
                    if(i==25)
                    { modele.addRow(new Object[]{"Rang",note});}
                    }   
                   
                }
    
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
     
    
    } 
    }//GEN-LAST:event_notesS3ActionPerformed
    // Mise en place des notes du semestre 4
    private void notesS4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notesS4ActionPerformed
       {                                        
        {                                        
        // TODO add your handling code here:
                lbl_semestre.setText("Semestre 4");

         test_table();
        DefaultTableModel modele= (DefaultTableModel)jt_notes.getModel();
           jt_notes.setDefaultRenderer(Object.class, new DefaultTableCellRenderer()
{
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
    {
    
       
        final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
    if(row==12||row==20||row==22)
    {
        c.setBackground(new Color(102,255,204));
        c.setFont(new Font("Helvetica Bold", Font.BOLD,20));
    }
    else
        if(row==23)
            {
                c.setBackground(new Color(10, 216, 148));
                c.setFont(new Font("Helvetica Bold", Font.BOLD,22));
            }
        else
            if(row==24||row==25)
            {
                c.setBackground(new Color(136, 150, 149));
                c.setFont(new Font("Helvetica Bold", Font.BOLD,20));
            }
            else
            {
                c.setBackground(Color.WHITE);
            }
        

return c;
    }});
        try
        {
            String note="", nomColonne="";
            int i;
            cnx=connecterDB();
            st=cnx.createStatement();
            String ne= lbl_nE1.getText();
            rst=st.executeQuery("Select * from notess4 where NE like'"+ne+"'");
           
                while(rst.next())
                {
                    for(i=3;i<29;i++)
                    {
                    
                    nomColonne=rst.getMetaData().getColumnName(i);
                    note=rst.getString(nomColonne);
                    if(i<26)
                    {
                    modele.addRow(new Object[]{recherche_nom_matiere(nomColonne),note});
                    }
                    if(i==26)
                    {  modele.addRow(new Object[]{"Moyenne S3",note});}
                    if(i==27)
                    {modele.addRow(new Object[]{"Ptn",note});}
                    if(i==28)
                    { modele.addRow(new Object[]{"Rang",note});}
                    }   
                }
    
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
     
    
    } 
    }  
    }//GEN-LAST:event_notesS4ActionPerformed

    //Recherche nom matiere, sous matiere ou UE 
           private String recherche_nom_matiere(String M) throws SQLException
     {
         String nom="";
             cnx=connecterDB();
             st=cnx.createStatement();
             
            rstSSMat=st.executeQuery("Select * from sous_matieres where id_sous_matiere like '"+M+"'");
             while(rstSSMat.next())
             {
                nom=rstSSMat.getNString(2);  
             }
             rstMat=st.executeQuery("Select * from matieres where id_matiere like '"+M+"'");
             while(rstMat.next())
             {
                nom=rstMat.getNString(2);  
             }
             rstUE=st.executeQuery("Select * from UE ue where id_UE like '"+M+"'");
             while(rstUE.next())
             {
                nom=rstUE.getNString(2);  
             }
             
         return nom;
     }
    
    private void tf_commActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_commActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tf_commActionPerformed
   
    //Definition du menu (recherche -afficher - lister )
    class btMouseListener implements MouseListener 
        {

        int a=0,l=0,r=0;
        @Override
        public void mouseClicked(MouseEvent e) 
            {
            }
        @Override
        public void mousePressed(MouseEvent e)
            {
                if(e.getSource()==bt_rechercher)
                {
                    setVisible(false);
                    new Rechercher().setVisible(true);
                }
                if(e.getSource()==bt_afficher)
                {
                    setVisible(false);
                    new Afficher().setVisible(true);
                }
                 if(e.getSource()==bt_lister)
                {
                    setVisible(false);
                    new Lister().setVisible(true);
                }
            }
                

        @Override
        public void mouseReleased(MouseEvent e) 
        {
           
        }

        @Override
        public void mouseEntered(MouseEvent e) 
        {
       
        }

        @Override
        public void mouseExited(MouseEvent e)
        {
          
        }
            }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rechercher_Etudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rechercher_Etudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rechercher_Etudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rechercher_Etudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Rechercher_Etudiant maFenetre = new Rechercher_Etudiant();
                maFenetre.setVisible(true);
                maFenetre.setSize(1400,800);
                

            }
        });
    }
        
    
    
    //Déclaration variable pour BDD
    static Connection cnx;
    static Statement st;
    static ResultSet rst,rstMat, rstSSMat, rstUE;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_afficher;
    private javax.swing.JButton bt_lister;
    private javax.swing.JButton bt_rechercher;
    private javax.swing.JScrollPane jsp_notes;
    private javax.swing.JTable jt_notes;
    private javax.swing.JLabel lbl_absence;
    private javax.swing.JLabel lbl_absence1;
    private javax.swing.JLabel lbl_bac;
    private javax.swing.JLabel lbl_bac1;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_email1;
    private javax.swing.JLabel lbl_erreur;
    private javax.swing.JLabel lbl_groupe;
    private javax.swing.JLabel lbl_groupe1;
    private javax.swing.JLabel lbl_logo;
    private javax.swing.JLabel lbl_nE;
    private javax.swing.JLabel lbl_nE1;
    private javax.swing.JLabel lbl_nom;
    private javax.swing.JLabel lbl_nom1;
    private javax.swing.JLabel lbl_prenom;
    private javax.swing.JLabel lbl_prenom1;
    private javax.swing.JLabel lbl_resultat;
    private javax.swing.JLabel lbl_semestre;
    private javax.swing.JLabel lbl_titre;
    private javax.swing.JButton notesS1;
    private javax.swing.JButton notesS2;
    private javax.swing.JButton notesS3;
    private javax.swing.JButton notesS4;
    private javax.swing.JPanel pann_cohortes;
    private javax.swing.JPanel pann_menu;
    private javax.swing.JPanel pann_notes;
    private javax.swing.JTextField tf_comm;
    // End of variables declaration//GEN-END:variables
}
